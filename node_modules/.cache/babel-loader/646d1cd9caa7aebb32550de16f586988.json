{"ast":null,"code":"const headers = new Headers({\n  Accept: \"application/json\",\n  \"Content-Type\": \"application/json\"\n});\nexport default async function callApi(endpoint, options) {\n  const request = {\n    headers,\n    method: options.method,\n    body: JSON.stringify(options.body)\n  };\n  return fetch(endpoint, request).then(response => response.text().then(responseBodyText => Object.assign(response, {\n    payload: responseBodyText ? JSON.parse(responseBodyText) : {}\n  }))).then(adjustedResponse => {\n    const payload = adjustedResponse.payload ? adjustedResponse.payload : {};\n    return adjustedResponse.ok ? Promise.resolve(payload) : Promise.reject(payload);\n  });\n}","map":{"version":3,"sources":["C:\\Users\\admin\\Desktop\\autokuca\\src\\call-api.js"],"names":["headers","Headers","Accept","callApi","endpoint","options","request","method","body","JSON","stringify","fetch","then","response","text","responseBodyText","Object","assign","payload","parse","adjustedResponse","ok","Promise","resolve","reject"],"mappings":"AAAA,MAAMA,OAAO,GAAG,IAAIC,OAAJ,CAAY;AAC1BC,EAAAA,MAAM,EAAE,kBADkB;AAE1B,kBAAgB;AAFU,CAAZ,CAAhB;AAKA,eAAe,eAAeC,OAAf,CAAuBC,QAAvB,EAAiCC,OAAjC,EAA0C;AACvD,QAAMC,OAAO,GAAG;AACdN,IAAAA,OADc;AAEdO,IAAAA,MAAM,EAAEF,OAAO,CAACE,MAFF;AAGdC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,OAAO,CAACG,IAAvB;AAHQ,GAAhB;AAMA,SAAOG,KAAK,CAACP,QAAD,EAAWE,OAAX,CAAL,CACJM,IADI,CACCC,QAAQ,IACZA,QAAQ,CAACC,IAAT,GAAgBF,IAAhB,CAAqBG,gBAAgB,IACnCC,MAAM,CAACC,MAAP,CAAcJ,QAAd,EAAwB;AACtBK,IAAAA,OAAO,EAAEH,gBAAgB,GAAGN,IAAI,CAACU,KAAL,CAAWJ,gBAAX,CAAH,GAAkC;AADrC,GAAxB,CADF,CAFG,EAQJH,IARI,CAQCQ,gBAAgB,IAAI;AACxB,UAAMF,OAAO,GAAGE,gBAAgB,CAACF,OAAjB,GAA2BE,gBAAgB,CAACF,OAA5C,GAAsD,EAAtE;AACA,WAAOE,gBAAgB,CAACC,EAAjB,GACHC,OAAO,CAACC,OAAR,CAAgBL,OAAhB,CADG,GAEHI,OAAO,CAACE,MAAR,CAAeN,OAAf,CAFJ;AAGD,GAbI,CAAP;AAcD","sourcesContent":["const headers = new Headers({\r\n  Accept: \"application/json\",\r\n  \"Content-Type\": \"application/json\"\r\n});\r\n\r\nexport default async function callApi(endpoint, options) {\r\n  const request = {\r\n    headers,\r\n    method: options.method,\r\n    body: JSON.stringify(options.body)\r\n  };\r\n\r\n  return fetch(endpoint, request)\r\n    .then(response =>\r\n      response.text().then(responseBodyText =>\r\n        Object.assign(response, {\r\n          payload: responseBodyText ? JSON.parse(responseBodyText) : {}\r\n        })\r\n      )\r\n    )\r\n    .then(adjustedResponse => {\r\n      const payload = adjustedResponse.payload ? adjustedResponse.payload : {};\r\n      return adjustedResponse.ok\r\n        ? Promise.resolve(payload)\r\n        : Promise.reject(payload);\r\n    });\r\n}\r\n"]},"metadata":{},"sourceType":"module"}